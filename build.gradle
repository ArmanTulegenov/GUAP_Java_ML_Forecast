/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.2/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
    id 'java-library'
    id 'org.bytedeco.gradle-javacpp-platform' version "$javacppVersion"
}



// We can set this on the command line too this way: -PjavacppPlatform=linux-x86_64,macosx-x86_64,windows-x86_64,etc
ext {
//    javacppPlatform = 'linux-x86_64,macosx-x86_64,windows-x86_64,etc' // defaults to Loader.getPlatform()
//    javacppVersion = '1.15.3-1.5.4'
}

configurations {
    all*.exclude group: 'org.bytedeco', module: 'javacpp-presets'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    jcenter()
    google()
}

dependencies {
    api "org.bytedeco:tensorflow-platform:1.15.3-1.5.4" // or any other "-platform" artifacts

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'
    implementation 'org.tensorflow:tensorflow-core-api:0.2.0'
    implementation 'org.tensorflow:tensorflow-core-api:0.2.0:linux-x86_64'
    implementation 'org.tensorflow:tensorflow-core-api:0.2.0:macosx-x86_64'
    implementation 'org.tensorflow:tensorflow-core-api:0.2.0:windows-x86_64'
    implementation 'org.bytedeco.javacpp-presets:tensorflow:1.12.0-1.4.4'

    implementation 'org.bytedeco:javacpp:1.5.4'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

application {
    // Define the main class for the application
    mainClassName = 'ru.guap.Main'
}
