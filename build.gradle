/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.2/userguide/tutorial_java_projects.html
 */


plugins {
    id "com.github.johnrengelman.shadow" version "5.1.0"
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
    id 'java-library'
}

// We can set this on the command line too this way: -PjavacppPlatform=linux-x86_64,macosx-x86_64,windows-x86_64,etc
ext {
//    javacppPlatform = 'linux-x86_64,macosx-x86_64,windows-x86_64,etc' // defaults to Loader.getPlatform()
//    javacppVersion = '1.15.3-1.5.4'
}

mainClassName = 'ru.guap.Driver'


repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven {url 'https://plugins.gradle.org/m2/'}
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    jcenter()
    google()
}

dependencies {

    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'org.apache.commons:commons-lang3:3.11'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'
    implementation  'org.deeplearning4j:deeplearning4j-core:1.0.0-beta7'
    implementation 'org.deeplearning4j:deeplearning4j-nn:1.0.0-beta7'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

}

application {
    // Define the main class for the application
    mainClassName = 'ru.guap.Driver'
}
